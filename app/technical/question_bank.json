[
    {
        "question": "Which of the following languages is more suited to a structured program?",
        "options": [
            "PL/1",
            "FORTRAN",
            "BASIC",
            "PASCAL",
            "None of the above"
        ],
        "answer": "",
        "explanation": ""
    },
    {
        "question": "Which of the following is not a logical data-base structure?",
        "options": [
            "tree",
            "relational",
            "network",
            "chain",
            "All of the above"
        ],
        "answer": "",
        "explanation": ""
    },
    {
        "question": "Which of the following refers to the associative memory?",
        "options": [
            "the address of the data is generated by the CPU",
            "the address of the data is supplied by the users",
            "there is no need for an address i.e. the data is used as an address",
            "the data are accessed sequentially",
            "None of the above"
        ],
        "answer": "",
        "explanation": ""
    },
    {
        "question": "Which of the following condition is used to transmit two packets over a medium at the same time?",
        "options": [
            "Contention",
            "Collision",
            "Synchronous",
            "Asynchronous",
            "None of the above"
        ],
        "answer": "",
        "explanation": ""
    },
    {
        "question": "Which will legally declare, construct, and initialize an array?",
        "options": [
            "3. Which will legally declare, construct, and initialize an array? int [] myList = {\"1\", \"2\", \"3\"}; int [] myList = (5, 8,",
            "; int myList [] [] = {4,9,7,0}; int myList [] = {4, 3, 7};"
        ],
        "answer": "",
        "explanation": ""
    },
    {
        "question": "Which one of these lists contains only Java programming language keywords?",
        "options": [
            "class, if, void, long, Int, continue",
            "goto, instanceof, native, finally, default, throws",
            "try, virtual, throw, final, volatile, transient",
            "strictfp, constant, super, implements, do",
            "byte, break, assert, switch, include"
        ],
        "answer": "",
        "explanation": ""
    }
]